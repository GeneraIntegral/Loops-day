//Dmitrieva_Olesya_Andreevna_SBD211

#include <windows.h> //подключить русский ввод-вывод
#include <iostream>  //ввод-вывод данных
#include <cmath>     //библиотека выполнения математических операций
#include <conio.h>   //подключение getch
#include <ctime>	 //функция time()
#include <stdlib.h>  //нужен для вызова функции rand(), srand()

using namespace std;

#define Enter 13
#define Escape 27

int main()
{
	setlocale(0, "");         int N;
List:
	do
	{
		std::cout << endl;
		std::cout << "------------------------------------------------------------- \n";
		std::cout << "Введите номер действия                         \n";  cout << endl;
		std::cout << "0. Вывести задачу 0 [Game Shooter]             \n";				           
		std::cout << "1. Вывести задачу 1 [Факториал]                \n";				           
		std::cout << "2. Вывести задачу 2 [Возведение в степень]     \n";				           
		std::cout << "3. Вывести задачу 3 [Таблица ASCII-символов]   \n";				           
		std::cout << "4. Вывести задачу 4 [Ряд Фибоначчи]            \n";				           
		std::cout << "5. Вывести задачу 5 [Ряд Фибоначчи 2]          \n";				           
		std::cout << "6. Вывести задачу 6 [Предел]                   \n";  cout << endl;
		std::cout << "Перейти к номеру: ";                                 cin >> N;
		std::cout << "------------------------------------------------------------- \n";

		if (N == 0) goto Zero;
		if (N == 1) goto One;
		if (N == 2) goto Two;
		if (N == 3) goto Three;
		if (N == 4) goto Four;
		if (N == 5) goto Five;
		if (N == 6) goto Six;
	}
	while (N != 7);           goto End;
Zero:
	if (N == 0)
	{
		cout << endl;
		cout << "Задача #1 [Game Shooter]                                                                \n";    cout << endl;
		cout << "Написать программу Shooter, которая по нажатой клавише определяет действие ползователя: \n";    
		cout << "w - вперед            space - прыжок     \n";												     
		cout << "s - назад             enter - огонь      \n";												     
		cout << "a - влево             esc   - выход      \n";												     
		cout << "d - вправо                               \n";												     
		cout << "Если пользователь нажал на какую-либо другую клавишу, программа выводит \"Error\".      \n";    cout << endl;
		cout << "-------------------------------------------------------------                           \n";    cout << endl;
		cout << "Добро пожаловать в игру \"Шутер\"!                                    \n";
		cout << "Перед Вами простирается бесконечный видоизменяющийся лабиринт,        \n";
		cout << "который кишит монмтрами, жаждущими поглотить Вашу плоть.              \n";  cout << endl;
		cout << "Ваша цель - выжить любой ценой.                                       \n";
		cout << "Преодолевайте ловушки и сражайтесь с монстрами.                       \n";
		cout << "И помните, что удача не всегда на Вашей стороне. :)                   \n";  cout << endl;
		cout << "Игра уже началась!!!                                                  \n";  cout << endl;
		cout << "-------------------------------------------------------------         \n";  cout << endl;

		char key;                    //пременная, хранящая код нажатой клавиши

		do
		{
			key = _getch();
			if      (key == 'w')      cout << "Вы решительно идете вперед                            \n";
			else if (key == 's')      cout << "Вы разворачиваетесь и направляетесь назад             \n";
			else if (key == 'a')      cout << "Вы поворачиваетесь налево и идете дальше              \n";
			else if (key == 'd')      cout << "Вы поворачиваетесь направо и идете дальше             \n";
			else if (key == ' ')      cout << "Вы делаете большой прыжок                             \n";
			else if (key == Enter)    cout << "Вы достаете оружие, нацеливаетесь и метко стреляете   \n";
			else                      cout << "Ошибка ввода                                          \n";
			if (key == 'w' or key == 's' or key == 'a' or key == 'd' or key == ' ')
			{
				srand(time(0));       //инициализировать генератор
				string action[11] =
				{
				 "Перед Вами высокая стена, ее невозможно обойти или перепрыгнуть    ",
				 "Вы столкнулись со стеной                                           ",
				 "Вы чуть не наступили в яму, осторожнее!                            ",
				 "Перед Вами глубокая пропасть                                       ",
				 "Вы столкнулись с разъяренным монстром                              ",
				 "Рядом монстр, возможно, если идти тихо, он не заметит Вас          ",
				 "Монстр поблизости заметил Ваше присутствие бегите или стреляйте    ",
				 "Неподалеку монстр заметил Вас и быстро движется навстречу!         ",
				 "Путь чист, можно двигаться дальше                                  ",
				 "Рядом никого, продолжайте движение!                                ",
				 "Вы нашли выход!",
				};
				cout << action[rand() % 11] << endl;                      cout << endl;
			}

			if (key == Enter)
			{
				srand(time(0));       //инициализировать генератор
				string action[6] =
				{
				 "Вы уничтожили монстра!                                                   ",
				 "Вы промахнулись, оскалившися монстр быстро наступает к Вам навстречу     ",
				 "Монстр ранен, он шатко приближается к Вам, чтобы отомстить               ",
				 "Монстр повержен!                                                         ",
				 "Кончились патроны, Вы перезаряжаетесь                                    ",
				 "Монстр ранел Вас                                                         ",
				};
				cout << action[rand() % 6] << endl;                             cout << endl;
			}
		} while (key != Escape);
	}
	goto One;                 goto List;

One:
	if (N == 1)
	{
		cout << endl;
		cout << "Задача #1 [Факториал]                                                  \n";  cout << endl;
		cout << "Написать программу, в которую ползователь вводит число,                \n";
		cout << "а программа вычисляет Факториал введенного числа.                      \n";
		cout << "Факториал - это произведение ряда чисел от 1 до указанного:            \n";
		cout << "Например: 5! = 1*2*3*4*5 = 120                                         \n";
		cout << "-------------------------------------------------------------          \n";
		double n, i, F;                                                                       cout << endl;
		cout << "Введите любое число для расчета факториала: ";                               cin >> n; cout << endl;
		F = 1;
		if (n < 0)     cout << "Факториалы для отрицательных чисел не определены \n\n";
		if (n == 0)    cout << "Факториал от нуля будет ноль                     \n\n";
		else if (n > 0 && n != 0)
		{
			for (i = 1; i <= n; ++i)
				F *= i;
			cout << "Факториал числа " << n << " = " << F << endl << endl;
		}
	}
	goto Two;                 goto List;
Two:
	if (N == 2)
	{
		cout << endl;
		cout << "Задача #2 [Возведение в степень]                                \n";      cout << endl;
		cout << "Возвести указанное число в указанную степень,                   \n";	  
		cout << "основание и показатель степени вводятся с клавиатуры.           \n";      cout << endl;
		cout << "-------------------------------------------------------------   \n";
		double  a, b, c, k, e;
		do {
			cout << "Введите любое число для возведения его в степень: ";                      cin >> a;
			cout << "Введите любое число для значения степени: ";                              cin >> b;
			if (b == 1)
			{
				c = a;           cout << a << " ^ " << b << " = " << a << endl;            cout << endl;
			}
			else if ((a != 0) && (b == 0))
			{
				c = 1;           cout << a << " ^ " << b << " = " << 1 << endl;            cout << endl;
			}
			else if (b < 0)
			{
				k = 1 / a;
				e = b * -1;
				c = pow(k, e);   cout << a << " ^ " << b << " = " << pow(k, e) << endl;    cout << endl;
			}
			else if (a == 0 && b == 0)
			{
				c = 1;           cout << a << " ^ " << b << " = " << 1 << endl;             cout << endl;
			}
			else if (a != 0 && b != 0)
			{
				c = pow(a, b);  cout << a << " ^ " << b << " = " << pow(a, b) << endl;      cout << endl;
			}
		} while (b != 99999999999999);
	}
	goto Three;               goto List;

Three:
	if (N == 3)
	{
		cout << endl;
		cout << "Задача #3 [Таблица ASCII-символов]                               \n";   cout << endl;
		cout << "Вывести на экран таблицу ASCII-символов по 16 символов в строке. \n";   cout << endl;

		/*	
		   //Вывод таблицы ASCII-символов кодом:
			short i;
			for (i = 32; i <= 127; i++)
			{
			 printf(" %3d-%c", i, i);
			 if (i % 16 == 0) printf("\n");
			}
			 printf("\n");
		*/

		srand(time(0)); //инициализировать генератор
		string mas[37] =
		{
		 "-------------------------------------------------------------------------------------",
		 " 1     2    3    4  |  5     6    7    8  |  9    10   11   12  |  13  14   15    16 ",
		 "-------------------------------------------------------------------------------------",
		 "Char  Dec  Oct  Hex | Char  Dec  Oct  Hex | Char  Dec  Oct  Hex | Char Dec  Oct   Hex",
		 "-------------------------------------------------------------------------------------",
		 "(nul)   0 0000 0x00 | (sp)   32 0040 0x20 | @      64 0100 0x40 | `      96 0140 0x60",
		 "(soh)   1 0001 0x01 | !      33 0041 0x21 | A      65 0101 0x41 | a      97 0141 0x61",
		 "(stx)   2 0002 0x02 | \"      34 0042 0x22 | B      66 0102 0x42 | b      98 0142 0x62",
		 "(etx)   3 0003 0x03 | #      35 0043 0x23 | C      67 0103 0x43 | c      99 0143 0x63",
		 "(eot)   4 0004 0x04 | $      36 0044 0x24 | D      68 0104 0x44 | d     100 0144 0x64",
		 "(enq)   5 0005 0x05 | %      37 0045 0x25 | E      69 0105 0x45 | e     101 0145 0x65",
		 "(ack)   6 0006 0x06 | &      38 0046 0x26 | F      70 0106 0x46 | f     102 0146 0x66",
		 "(bel)   7 0007 0x07 | '      39 0047 0x27 | G      71 0107 0x47 | g     103 0147 0x67",
		 "(bs)    8 0010 0x08 | (      40 0050 0x28 | H      72 0110 0x48 | h     104 0150 0x68",
		 "(ht)    9 0011 0x09 | )      41 0051 0x29 | I      73 0111 0x49 | i     105 0151 0x69",
		 "(nl)   10 0012 0x0a | *      42 0052 0x2a | J      74 0112 0x4a | j     106 0152 0x6a",
		 "(vt)   11 0013 0x0b | +      43 0053 0x2b | K      75 0113 0x4b | k     107 0153 0x6b",
		 "(np)   12 0014 0x0c | ,      44 0054 0x2c | L      76 0114 0x4c | l     108 0154 0x6c",
		 "(cr)   13 0015 0x0d | -      45 0055 0x2d | M      77 0115 0x4d | m     109 0155 0x6d",
		 "(so)   14 0016 0x0e | .      46 0056 0x2e | N      78 0116 0x4e | n     110 0156 0x6e",
		 "(si)   15 0017 0x0f | /      47 0057 0x2f | O      79 0117 0x4f | o     111 0157 0x6f",
		 "(dle)  16 0020 0x10 | 0      48 0060 0x30 | P      80 0120 0x50 | p     112 0160 0x70",
		 "(dc1)  17 0021 0x11 | 1      49 0061 0x31 | Q      81 0121 0x51 | q     113 0161 0x71",
		 "(dc2)  18 0022 0x12 | 2      50 0062 0x32 | R      82 0122 0x52 | r     114 0162 0x72",
		 "(dc3)  19 0023 0x13 | 3      51 0063 0x33 | S      83 0123 0x53 | s     115 0163 0x73",
		 "(dc4)  20 0024 0x14 | 4      52 0064 0x34 | T      84 0124 0x54 | t     116 0164 0x74",
		 "(nak)  21 0025 0x15 | 5      53 0065 0x35 | U      85 0125 0x55 | u     117 0165 0x75",
		 "(syn)  22 0026 0x16 | 6      54 0066 0x36 | V      86 0126 0x56 | v     118 0166 0x76",
		 "(etb)  23 0027 0x17 | 7      55 0067 0x37 | W      87 0127 0x57 | w     119 0167 0x77",
		 "(can)  24 0030 0x18 | 8      56 0070 0x38 | X      88 0130 0x58 | x     120 0170 0x78",
		 "(em)   25 0031 0x19 | 9      57 0071 0x39 | Y      89 0131 0x59 | y     121 0171 0x79",
		 "(sub)  26 0032 0x1a | :      58 0072 0x3a | Z      90 0132 0x5a | z     122 0172 0x7a",
		 "(esc)  27 0033 0x1b | ;      59 0073 0x3b | [      91 0133 0x5b | {     123 0173 0x7b",
		 "(fs)   28 0034 0x1c | <      60 0074 0x3c | \\\      92 0134 0x5c | |     124 0174 0x7c",
		 "(gs)   29 0035 0x1d | =      61 0075 0x3d | ]      93 0135 0x5d | }     125 0175 0x7d",
		 "(rs)   30 0036 0x1e | >      62 0076 0x3e | ^      94 0136 0x5e | ~     126 0176 0x7e",
		 "(us)   31 0037 0x1f | ?      63 0077 0x3f | _      95 0137 0x5f | (del) 127 0177 0x7f",
		};
		for (int i = 0; i < 37; i++)
		{
			cout << mas[i] << endl;      cout << endl;
		}
	}
	goto Four;               goto List;

Four:
	if (N == 4)
	{
		cout << endl;
		cout << "Задача #4 [Ряд Фибоначчи]                                         \n";  cout << endl;
		cout << "Вывести на экран ряд Фибоначчи до числа, введенного с клавиатуры. \n";
		cout << "Ряд Фибоначчи можно построить из двух чисел 0 и 1,                \n";
		cout << "третье число из ряда является суммой первых двух.                 \n";
		cout << "Каждый следующий член ряда - это сумма двух предыдущих членов:    \n";
		cout << "	0	1	1	2	3	5	8	13	21 ...                         \n";  cout << endl;
		cout << "-------------------------------------------------------------     \n";
		int a = 0, b = 1, c = 1, k;
		cout << "Выведите число, до которого будет постоен ряд Фибоначчи: ";
		                                                                      cin >> k;  cout << endl;
		while (b <= k)   //тело цикла while с условием, до какого числа выводить ряд
		{
			cout << c << "	";  c = a + b;   a = b;   b = c;
		}
	}
	goto Five;               goto List;

Five:
	if (N == 5)
	{
		cout << endl;
		cout << "Задача #5 [Ряд Фибоначчи 2]                                     \n"; cout << endl;
		cout << "Вывести на экран заданное количество чисел из ряда Фибоначчи.   \n"; cout << endl;
		cout << "-------------------------------------------------------------   \n";
		int y = 1, x = 0, g = 2, k;
		cout << "Введите количество чисел Фибоначчи: ";
		                                                                  cin >> k;   cout << endl;
		cout << "1 1";
		while (g <= k)
		{
			x = x + y;                y = x + y;
			cout << " " << y;         g++;
		}
	}
	goto Six;                goto List;

Six:
	if (N == 6)
	{
		cout << endl;
		cout << "Задача #6 [Предел]                                                     \n";   cout << endl;
		cout << "Вывести на экран ряд простых чисел, до указанного предела.             \n";
		cout << "Простым называется число, которое делится только на себя и на единицу. \n";
		cout << "-------------------------------------------------------------          \n";
		int i, j, n;
		cout << "Введите предел ряда простых чисел: ";                                         cin >> n;
		for (i = 1; i <= (n - 1); i++)
		{
			for (j = 2; j < sqrt(i); j++)
			{
				if ((i % j) != 0)                                                              cout << i << " ";
			}
		}
		cout << endl;
	}
	goto List;
End:
	return 0;
}
